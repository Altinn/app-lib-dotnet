// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models
{
    /// <summary>
    /// Only one of these should be spcecified when creating a new inistance
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class InstanceWrite_instanceOwner : IParsable
    {
        /// <summary>The organisationNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrganisationNumber { get; set; }
#nullable restore
#else
        public string OrganisationNumber { get; set; }
#endif
        /// <summary>The partyId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PartyId { get; set; }
#nullable restore
#else
        public string PartyId { get; set; }
#endif
        /// <summary>The personNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PersonNumber { get; set; }
#nullable restore
#else
        public string PersonNumber { get; set; }
#endif
        /// <summary>Initialization based on username is not yet supported (https://github.com/Altinn/app-lib-dotnet/issues/652)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Username { get; set; }
#nullable restore
#else
        public string Username { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.InstanceWrite_instanceOwner"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.InstanceWrite_instanceOwner CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.InstanceWrite_instanceOwner();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "organisationNumber", n => { OrganisationNumber = n.GetStringValue(); } },
                { "partyId", n => { PartyId = n.GetStringValue(); } },
                { "personNumber", n => { PersonNumber = n.GetStringValue(); } },
                { "username", n => { Username = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("organisationNumber", OrganisationNumber);
            writer.WriteStringValue("partyId", PartyId);
            writer.WriteStringValue("personNumber", PersonNumber);
            writer.WriteStringValue("username", Username);
        }
    }
}
#pragma warning restore CS0618
