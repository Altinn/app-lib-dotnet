// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ProcessElementInfo : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The altinnTaskType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AltinnTaskType { get; set; }
#nullable restore
#else
        public string AltinnTaskType { get; set; }
#endif
        /// <summary>The elementId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ElementId { get; set; }
#nullable restore
#else
        public string ElementId { get; set; }
#endif
        /// <summary>The ended property</summary>
        public DateTimeOffset? Ended { get; set; }
        /// <summary>The flow property</summary>
        public int? Flow { get; set; }
        /// <summary>The flowType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FlowType { get; set; }
#nullable restore
#else
        public string FlowType { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The started property</summary>
        public DateTimeOffset? Started { get; set; }
        /// <summary>The validated property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.ValidationStatus? Validated { get; set; }
#nullable restore
#else
        public global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.ValidationStatus Validated { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.ProcessElementInfo"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.ProcessElementInfo CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.ProcessElementInfo();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "altinnTaskType", n => { AltinnTaskType = n.GetStringValue(); } },
                { "elementId", n => { ElementId = n.GetStringValue(); } },
                { "ended", n => { Ended = n.GetDateTimeOffsetValue(); } },
                { "flow", n => { Flow = n.GetIntValue(); } },
                { "flowType", n => { FlowType = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "started", n => { Started = n.GetDateTimeOffsetValue(); } },
                { "validated", n => { Validated = n.GetObjectValue<global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.ValidationStatus>(global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.ValidationStatus.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("altinnTaskType", AltinnTaskType);
            writer.WriteStringValue("elementId", ElementId);
            writer.WriteDateTimeOffsetValue("ended", Ended);
            writer.WriteIntValue("flow", Flow);
            writer.WriteStringValue("flowType", FlowType);
            writer.WriteStringValue("name", Name);
            writer.WriteDateTimeOffsetValue("started", Started);
            writer.WriteObjectValue<global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.ValidationStatus>("validated", Validated);
        }
    }
}
#pragma warning restore CS0618
