// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class DataType : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The allowedContentTypes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AllowedContentTypes { get; set; }
#nullable restore
#else
        public List<string> AllowedContentTypes { get; set; }
#endif
        /// <summary>The allowedContributers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AllowedContributers { get; set; }
#nullable restore
#else
        public List<string> AllowedContributers { get; set; }
#endif
        /// <summary>The allowedKeysForUserDefinedMetadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AllowedKeysForUserDefinedMetadata { get; set; }
#nullable restore
#else
        public List<string> AllowedKeysForUserDefinedMetadata { get; set; }
#endif
        /// <summary>The appLogic property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.ApplicationLogic? AppLogic { get; set; }
#nullable restore
#else
        public global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.ApplicationLogic AppLogic { get; set; }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.DataType_description? Description { get; set; }
#nullable restore
#else
        public global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.DataType_description Description { get; set; }
#endif
        /// <summary>The enabledFileAnalysers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? EnabledFileAnalysers { get; set; }
#nullable restore
#else
        public List<string> EnabledFileAnalysers { get; set; }
#endif
        /// <summary>The enabledFileValidators property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? EnabledFileValidators { get; set; }
#nullable restore
#else
        public List<string> EnabledFileValidators { get; set; }
#endif
        /// <summary>The enableFileScan property</summary>
        public bool? EnableFileScan { get; set; }
        /// <summary>The enablePdfCreation property</summary>
        public bool? EnablePdfCreation { get; set; }
        /// <summary>The grouping property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Grouping { get; set; }
#nullable restore
#else
        public string Grouping { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The maxCount property</summary>
        public int? MaxCount { get; set; }
        /// <summary>The maxSize property</summary>
        public int? MaxSize { get; set; }
        /// <summary>The minCount property</summary>
        public int? MinCount { get; set; }
        /// <summary>The taskId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TaskId { get; set; }
#nullable restore
#else
        public string TaskId { get; set; }
#endif
        /// <summary>The validationErrorOnPendingFileScan property</summary>
        public bool? ValidationErrorOnPendingFileScan { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.DataType"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.DataType CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.DataType();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "allowedContentTypes", n => { AllowedContentTypes = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "allowedContributers", n => { AllowedContributers = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "allowedKeysForUserDefinedMetadata", n => { AllowedKeysForUserDefinedMetadata = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "appLogic", n => { AppLogic = n.GetObjectValue<global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.ApplicationLogic>(global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.ApplicationLogic.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetObjectValue<global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.DataType_description>(global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.DataType_description.CreateFromDiscriminatorValue); } },
                { "enableFileScan", n => { EnableFileScan = n.GetBoolValue(); } },
                { "enablePdfCreation", n => { EnablePdfCreation = n.GetBoolValue(); } },
                { "enabledFileAnalysers", n => { EnabledFileAnalysers = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "enabledFileValidators", n => { EnabledFileValidators = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "grouping", n => { Grouping = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "maxCount", n => { MaxCount = n.GetIntValue(); } },
                { "maxSize", n => { MaxSize = n.GetIntValue(); } },
                { "minCount", n => { MinCount = n.GetIntValue(); } },
                { "taskId", n => { TaskId = n.GetStringValue(); } },
                { "validationErrorOnPendingFileScan", n => { ValidationErrorOnPendingFileScan = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("allowedContentTypes", AllowedContentTypes);
            writer.WriteCollectionOfPrimitiveValues<string>("allowedContributers", AllowedContributers);
            writer.WriteCollectionOfPrimitiveValues<string>("allowedKeysForUserDefinedMetadata", AllowedKeysForUserDefinedMetadata);
            writer.WriteObjectValue<global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.ApplicationLogic>("appLogic", AppLogic);
            writer.WriteObjectValue<global::Altinn.App.Integration.FrontendTests.GeneratedClient.KiotaGenerated.Models.DataType_description>("description", Description);
            writer.WriteCollectionOfPrimitiveValues<string>("enabledFileAnalysers", EnabledFileAnalysers);
            writer.WriteCollectionOfPrimitiveValues<string>("enabledFileValidators", EnabledFileValidators);
            writer.WriteBoolValue("enableFileScan", EnableFileScan);
            writer.WriteBoolValue("enablePdfCreation", EnablePdfCreation);
            writer.WriteStringValue("grouping", Grouping);
            writer.WriteStringValue("id", Id);
            writer.WriteIntValue("maxCount", MaxCount);
            writer.WriteIntValue("maxSize", MaxSize);
            writer.WriteIntValue("minCount", MinCount);
            writer.WriteStringValue("taskId", TaskId);
            writer.WriteBoolValue("validationErrorOnPendingFileScan", ValidationErrorOnPendingFileScan);
        }
    }
}
#pragma warning restore CS0618
