{
  Respons: {"title":"Failed to deserialize JSON","status":400,"detail":"'d' is an invalid start of a value. Path: $ | LineNumber: 0 | BytePositionInLine: 1."},
  Snapshot: {
    Activities: [
      {
        Name: PUT {org}/{app}/instances/{instanceOwnerPartyId:int}/{instanceGuid:guid}/data/{dataGuid:guid},
        Kind: Server,
        IdFormat: W3C,
        Tags: [
          {
            http.request.method: PUT
          },
          {
            http.response.status_code: 400
          },
          {
            http.route: {org}/{app}/instances/{instanceOwnerPartyId:int}/{instanceGuid:guid}/data/{dataGuid:guid}
          },
          {
            instance.owner.party.id: 500600
          },
          {
            network.protocol.version: 1.1
          },
          {
            problem.status: 400
          },
          {
            problem.title: Failed to deserialize JSON
          },
          {
            server.address: localhost
          },
          {
            TestId: Guid_1
          },
          {
            url.path: /tdd/contributer-restriction/instances/500600/00000000-dead-0000-babe-000000000999/data/cd691c32-0000-4555-8aee-0b7054a413e4
          },
          {
            url.scheme: http
          },
          {
            user.authentication.inAltinnPortal: true
          },
          {
            user.authentication.level: 2
          },
          {
            user.authentication.method: BankID
          },
          {
            user.authentication.token.isExchanged: false
          },
          {
            user.authentication.token.issuer: Altinn
          },
          {
            user.authentication.type: User
          },
          {
            user.id: 1337
          },
          {
            user.party.id: 500600
          }
        ],
        HasParent: false
      },
      {
        Name: SerializationService.DeserializeJson,
        IdFormat: W3C,
        Tags: [
          {
            Type: Altinn.App.Api.Tests.Data.apps.tdd.contributer_restriction.models.Skjema
          }
        ],
        Events: [
          {
            Name: exception,
            Timestamp: DateTimeOffset_1,
            Tags: [
              {
                exception.message: 'd' is an invalid start of a value. Path: $ | LineNumber: 0 | BytePositionInLine: 1.
              },
              {
                exception.stacktrace:
System.Text.Json.JsonException: 'd' is an invalid start of a value. Path: $ | LineNumber: 0 | BytePositionInLine: 1.
 ---> System.Text.Json.JsonReaderException: 'd' is an invalid start of a value. LineNumber: 0 | BytePositionInLine: 1.
   at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes)
   at System.Text.Json.Utf8JsonReader.ConsumeValue(Byte marker)
   at System.Text.Json.Utf8JsonReader.ReadFirstToken(Byte first)
   at System.Text.Json.Utf8JsonReader.ReadSingleSegment()
   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, T& value, JsonSerializerOptions options, ReadStack& state)
   --- End of inner exception stack trace ---
   at System.Text.Json.ThrowHelper.ReThrowWithPath(ReadStack& state, JsonReaderException ex)
   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, T& value, JsonSerializerOptions options, ReadStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.Deserialize(Utf8JsonReader& reader, ReadStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.DeserializeAsObject(Utf8JsonReader& reader, ReadStack& state)
   at System.Text.Json.JsonSerializer.ReadFromSpanAsObject(ReadOnlySpan`1 utf8Json, JsonTypeInfo jsonTypeInfo, Nullable`1 actualByteCount)
   at System.Text.Json.JsonSerializer.Deserialize(ReadOnlySpan`1 utf8Json, Type returnType, JsonSerializerOptions options)
   at Altinn.App.Core.Helpers.Serialization.ModelSerializationService.DeserializeJson(ReadOnlySpan`1 data, Type modelType) in {SolutionDirectory}src/Altinn.App.Core/Helpers/Serialization/ModelSerializationService.cs:line 190
              },
              {
                exception.type: System.Text.Json.JsonException
              }
            ]
          }
        ],
        HasParent: true
      }
    ]
  }
}